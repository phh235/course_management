package org.example.duanxuong.api;import org.example.duanxuong.entity.Rate;import org.example.duanxuong.service.RateService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import java.util.HashMap;import java.util.List;import java.util.Map;@RestController@RequestMapping("/rate-api")public class RateApi {    @Autowired    private RateService rateService;    @GetMapping("/getAllRate")    public ResponseEntity<?> doGetAllRate() {        Map<String, Object> result = new HashMap<>();        try {            List<Rate> rates = rateService.getAllRate();            result.put("success", true);            result.put("message", "Call API Success");            result.put("data", rates);        } catch (Exception e) {            result.put("success", false);            result.put("message", "Call API Error");            result.put("data", null);            e.printStackTrace();        }        return ResponseEntity.ok(result);    }    @PostMapping("/postRate")    public ResponseEntity<?> doPostRate(@RequestBody Rate rate) {        Map<String, Object> result = new HashMap<>();        try {            Rate savedRate = rateService.doSaveRate(rate);            result.put("success", true);            result.put("message", "Call API Success");            result.put("data", savedRate);        } catch (Exception e) {            result.put("success", false);            result.put("message", "Call API Error");            result.put("data", null);            e.printStackTrace();        }        return ResponseEntity.ok(result);    }    @DeleteMapping("/deleteByIdRate/{id}")    public ResponseEntity<?> doDeleteByIdRate(@PathVariable int id) {        Map<String, Object> result = new HashMap<>();        try {            rateService.doGetDelete(id);            result.put("success", true);            result.put("message", "Call API Success");        } catch (Exception e) {            result.put("success", false);            result.put("message", "Call API Error");            e.printStackTrace();        }        return ResponseEntity.ok(result);    }    @GetMapping("/getRatesByCourseId/{courseId}")    public ResponseEntity<?> doGetRatesByCourseId(@PathVariable int courseId) {        Map<String, Object> result = new HashMap<>();        try {            List<Rate> rates = rateService.getRatesByCourseId(courseId);            result.put("success", true);            result.put("message", "Call API Success");            result.put("data", rates);        } catch (Exception e) {            result.put("success", false);            result.put("message", "Call API Error");            result.put("data", null);            e.printStackTrace();        }        return ResponseEntity.ok(result);    }}