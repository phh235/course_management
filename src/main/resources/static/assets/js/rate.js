let stars = 0;function setRating(value) {    stars = value;    console.log('Số sao đã chọn:', stars);    highlightStars(value);}// Hàm để highlight các sao theo số sao đã chọnfunction highlightStars(value) {    let starElements = document.querySelectorAll('.stars .star');    starElements.forEach((star, index) => {        if (index < value) {            star.classList.add('text-warning'); // Thêm class active để highlight sao đã chọn        } else {            star.classList.remove('text-warning'); // Loại bỏ class active để bỏ highlight sao chưa chọn        }    });}function fetchComments(courseId) {    axios.get(`/rate-api/getRatesByCourseId/${courseId}`)        .then(function (response) {            console.log(response.data.data);            let rates = response.data.data;            let html = '';            // Định dạng lại ngày tháng            function formatDate(dateString) {                let options = {                    hour: 'numeric',                    minute: 'numeric',                    day: 'numeric',                    month: 'numeric',                    year: 'numeric'                };                let date = new Date(dateString);                return date.toLocaleDateString('en-GB', options);            }            // Duyệt qua mỗi bình luận và xây dựng chuỗi HTML            rates.forEach(function (rate) {                let author = rate.user.fullName;                let avatar = rate.user.avatar;                let stars = rate.stars;                let comment = rate.comment;                let commentDate = rate.commentDate;                html += `                        <div class="comment">                            <div class="card-body">                                <div class="d-flex flex-start align-items-center">                                    <img class="rounded-circle me-3 avatar"                                        src="../../assets/img/${avatar}" alt="${author}'s avatar" width="60"                                        height="60" />                                    <div>                                        <h6 class="fw-bold text-primary mb-1 author">${author}</h6>                                        <p class="text-muted small mb-0">${commentDate}</p>                                        <p class="text-muted small mb-0">${stars} <i class="fas fa-star text-warning"></i></p>                                    </div><!--                                    <div class="btn-group dropend">--><!--                                        <button--><!--                                            type="button" class="btn btn-link"--><!--                                            data-mdb-dropdown-init--><!--                                            data-mdb-ripple-color="dark"--><!--                                            data-mdb-ripple-init aria-expanded="false">--><!--                                           <i class="fas fa-ellipsis-vertical"></i>--><!--                                        </button>--><!--                                        <ul class="dropdown-menu">--><!--                                            <li><a class="dropdown-item" href="#">Chỉnh sửa</a></li>--><!--                                            <li><a class="dropdown-item" href="#">Xóa</a></li>--><!--                                           </ul>--><!--                                    </div>-->                                </div>                                <p class="mt-3 mb-4 pb-2 comment">                                    ${comment}                                </p>                            </div>                        </div>                    `;            });            // Cập nhật danh sách bình luận trên giao diện            document.getElementById('comment-list').innerHTML = html;        })        .catch(function (error) {            console.error('Lỗi khi lấy bình luận:', error);        });}function getDateInVietNam() {    let date = new Date();    let options = {timeZone: 'Asia/Ho_Chi_Minh', hour12: false};    return date.toLocaleString('en-GB', options).replace(/,/g, '.')}function getCurrentUserId() {    let user = JSON.parse(localStorage.getItem('loggedInUser')).userId;    return user ? user : null;}function submitComment() {    let comment = document.getElementById('textAreaExample').value;    let commentDate = getDateInVietNam();    let courseId = document.getElementById('course-id').textContent.trim();    let userId = getCurrentUserId();    let data = {        stars: stars,        comment: comment,        commentDate: commentDate,        course: {            courseId: parseInt(courseId)        },        user: {            userId: userId        }    };    console.log(data)    axios.post('/rate-api/postRate', data)        .then(function (response) {            document.getElementById('textAreaExample').value = '';            fetchComments(courseId);            stars = 0;            highlightStars(0);        })        .catch(function (error) {            console.error('Lỗi khi đăng bình luận:', error);            Swal.fire({                icon: 'error',                title: 'Oops...',                text: 'Có lỗi xảy ra khi đăng bình luận!'            });        });}function deleteComment(button) {    var rateId = button.getAttribute("data");    Swal.fire({        title: 'Bạn có chắc chắn xóa không?',        text: 'Bạn sẽ không thể hoàn tác',        icon: 'warning',        showCancelButton: true,        confirmButtonColor: '#139c49',        cancelButtonColor: '#dc4c64',        confirmButtonText: 'Xóa',        cancelButtonText: 'Hủy'    }).then((result) => {        if (result.isConfirmed) {            axios.delete(`/rate-api/deleteByIdRate/${rateId}`)                .then(response => {                    if (response.data.success) {                        Swal.fire({                            icon: 'success',                            title: 'Thành công',                            text: 'Đã xóa bình luận.',                            timer: 2000                        }).then(() => {                            location.reload();                        });                    } else {                        Swal.fire(                            'Lỗi!',                            'Không thể xóa bình luận.',                            'error'                        );                    }                })                .catch(error => {                    Swal.fire(                        'Lỗi!',                        'Đã xảy ra lỗi.',                        'error'                    );                });        }    });}document.addEventListener('DOMContentLoaded', function () {    let courseId = document.getElementById('course-id').textContent.trim();    getCurrentUserId()    fetchComments(courseId);});function resetForm() {    document.getElementById('textAreaExample').value = '';    stars = 0;    highlightStars(0);}